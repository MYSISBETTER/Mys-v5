--Give Credits if you use any of my codes pls :) - MYS

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

getgenv().Game = game
getgenv().JobID = getgenv().Game.JobId
getgenv().PlaceID = getgenv().Game.PlaceId

getgenv().Service_Wrap = function(serviceName)
    if cloneref then
        return cloneref(getgenv().Game:GetService(serviceName))
    else
        return getgenv().Game:GetService(serviceName)
    end
end

getgenv().Players = getgenv().Service_Wrap("Players")
getgenv().ReplicatedStorage = getgenv().Service_Wrap("ReplicatedStorage")
getgenv().Lighting = getgenv().Service_Wrap("Lighting")
getgenv().StarterPlayer = getgenv().Service_Wrap("StarterPlayer")
getgenv().Workspace = getgenv().Service_Wrap("Workspace")
getgenv().Terrain = getgenv().Workspace.Terrain or getgenv().Workspace:FindFirstChild("Terrain")
getgenv().TeleportService = getgenv().Service_Wrap("TeleportService")
getgenv().TweenService = getgenv().Service_Wrap("TweenService")
getgenv().HttpService = getgenv().Service_Wrap("HttpService")
getgenv().AssetService = getgenv().Service_Wrap("AssetService")
getgenv().MaterialService = getgenv().Service_Wrap("MaterialService")
getgenv().RunService = getgenv().Service_Wrap("RunService")
getgenv().VoiceChatInternal = getgenv().Service_Wrap("VoiceChatInternal")
getgenv().VoiceChatService = getgenv().Service_Wrap("VoiceChatService")
getgenv().TextChatService = getgenv().Service_Wrap("TextChatService")
getgenv().UserInputService = getgenv().Service_Wrap("UserInputService")
getgenv().LocalPlayer = getgenv().Players.LocalPlayer
getgenv().PlayerGui = getgenv().LocalPlayer:WaitForChild("PlayerGui") or getgenv().LocalPlayer:FindFirstChild("PlayerGui")
getgenv().Character = getgenv().LocalPlayer.Character or getgenv().LocalPlayer.CharacterAdded:Wait()
getgenv().HumanoidRootPart = getgenv().Character:WaitForChild("HumanoidRootPart") or getgenv().Character:FindFirstChild("HumanoidRootPart")
getgenv().Humanoid = getgenv().Character:WaitForChild("Humanoid") or getgenv().Character:FindFirstChildWhichIsA("Humanoid") or getgenv().Character:FindFirstChild("Humanoid")
getgenv().AllClipboards = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)
getgenv().httprequest_Init = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request

-- Initialize Rayfield UI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
getgenv().AllClipboards("https://discord.gg/djMQRCNAAZ")
wait(0.2)
local Window = Rayfield:CreateWindow({
    Name = "MYS'S CLIENT| V5 | Executed At ",
    Icon = 0,
    LoadingTitle = "🔥MYS'S CLIENT V5🔥",
    LoadingSubtitle = "By MYS Motherfucker",
    Theme = "Amethyst",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "MYS_MENU_HUB"
    },
    Discord = {
        Enabled = true,
        Invite = "djMQRCNAAZ",
        RememberJoins = true
    },
    KeySystem = true,
    KeySettings = {
        Title = "🎅MYS'S CLIENT V5🎄",
        Subtitle = "KEY IN DISCORD..",
        Note = "Join Server From Misc Tab",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = true,
        Key = {"https://pastebin.com/raw/JkXitxep"}
    }
})

wait(0.1)
if game.Players.LocalPlayer.Name == "01xMYS" then
if getgenv().passed_loaded_jobid_joiner then
warn("Already loaded job_id joiner.")
else
loadstring(game:HttpGet('https://raw.githubusercontent.com/EnterpriseExperience/run_process_count/refs/heads/main/get_ai_generator.css'))()
wait(0.1)
getgenv().passed_loaded_jobid_joiner = true
end
else
warn("Action denied.")
end


local function playBackgroundMusic()

    if not musicSound then
        musicSound = Instance.new("Sound")
        musicSound.SoundId = "rbxassetid://1838667764" 
        musicSound.Volume = 0.01  
        musicSound.Looped = true  
        musicSound.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")  
        musicSound:Play()  
    end
end

local MainTab = Window:CreateTab("</ 🪐HOME > ", nil)
local MainSection = MainTab:CreateSection("- MAIN -")

Rayfield:Notify({
 Title = "You Executed My Script..",
 Content = "Have Fun Fucking Newgens😂 ",
 Duration = 5,
 Image = nil,
})

local Slider = MainTab:CreateSlider({
 Name = "Change Your Fucking Walk Speed😂",
 Range = {16, 999},
 Increment = 1,
 Suffix = "WalkSpeed",
 CurrentValue = 16,
 Flag = "Slider1",
 Callback = function(Value)
      game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
 end,
})

local Button = MainTab:CreateButton({
 Name = "Default WalkSpeed",
 Callback = function()
      game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (16)
 end,
})

local SecSection = MainTab:CreateSection("- 🔥 PreMade Scripts 💯 -")

local Button = MainTab:CreateButton({
 Name = "Infinite Yield",
 Callback = function()
      loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
 end,
})

local Button = MainTab:CreateButton({
 Name = "empty tools",
 Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/likelysmith/EmptyTools/main/script"))()
 end,
})

local Button = MainTab:CreateButton({
 Name = "System Broken",
 Callback = function()
      loadstring(game:HttpGet('https://raw.githubusercontent.com/H20CalibreYT/SystemBroken/main/script'))()
 end,
})

local Button = MainTab:CreateButton({
 Name = "Emote Script",
 Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/Gi7331/scripts/main/Emote.lua"))()
 end,
})

local Button = MainTab:CreateButton({
 Name = "Face Fuck - Press Z when activated",
 Callback = function()
      loadstring(game:HttpGet('https://raw.githubusercontent.com/saya420/Mic-Up/main/facefuck'))()
 end,
})

local Button = MainTab:CreateButton({
 Name = "Unsuspend VC",
 Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/platinumicy/unsuspend/refs/heads/main/unsuspend"))()
 end,
})

local SecTab = Window:CreateTab(" </ MYS'S SCRIPTS💯 > ", nil)
local MainSection = SecTab:CreateSection("- MYS'S OFFICIAL CHAT BYPASS MOTHERFUCKER😂 -")

local ChatBypassTextInput = SecTab:CreateInput({
Name = "Chat Bypass Input",
PlaceholderText = "Text",
RemoveTextAfterFocusLost = true,
Callback = function(saveInputFilter)
    local chat = getgenv().TextChatService:WaitForChild("TextChannels"):WaitForChild("RBXGeneral")

    local letters = {
        set1 = {
            ["a"] = "ẳ",
            ["b"] = "ɓ",
            ["c"] = "ㄈ",
            ["d"] = "ȡ",
            ["e"] = "ȇ",
            ["f"] = "ӻ",
            ["g"] = "ɠ",
            ["h"] = "ȟ",
            ["i"] = "׀",
            ["j"] = "ǰ",
            ["k"] = "ҟ",
            ["l"] = "ȴ",
            ["m"] = "ɱ",
            ["n"] = "冂",
            ["o"] = "ό",
            ["p"] = "ᵽ",
            ["q"] = "ԛ",
            ["r"] = "ŗ",
            ["s"] = "ȿ",
            ["t"] = "丅",
            ["u"] = "ȕ",
            ["v"] = "ѵ",
            ["w"] = "ώ",
            ["x"] = "ẍ",
            ["y"] = "ƴ",
            ["z"] = "ȥ",
        }
    }

    local numbers = {
        set1 = {
            ["0"] = "Θ",
            ["1"] = "Ɩ",
            ["2"] = "ƻ",
            ["3"] = "Ʒ",
            ["4"] = "🄅",
            ["5"] = "Ƽ",
            ["6"] = "Ϭ",
            ["7"] = "🄈",
            ["8"] = "Ȣ",
            ["9"] = "Θ",
        }
    }

    local function convert(text)
        local letters_set = letters["set1"]
        local numbers_set = numbers["set1"]
    
        local converted = ""
        for i = 1, #text do
            local char = text:sub(i, i)
            local lower_char = char:lower()
    
            if char:match("%a") then
                if lettersBypass then
                    converted = converted .. char
                else
                    converted = converted .. (letters_set[lower_char] or char)
                end
            elseif char:match("%d") then
                if numbersBypass then
                    converted = converted .. char
                else
                    converted = converted .. (numbers_set[char] or char)
                end
            else
                converted = converted .. char
            end
        end
        return converted
    end
    wait(.2)
    local function sendchat(msg)
        chat:SendAsync(convert(msg))
    end

    sendchat(saveInputFilter)
end,})


local SecondSection = SecTab:CreateSection("- MYS'S SCRIPTS ARE BETTER MOTHERFUCKER😂 -")


local Button = SecTab:CreateButton({
 Name = "Teleport STS",
 Callback = function()
      loadstring(game:HttpGet("https://pastebin.com/raw/C9xKTuzD"))()
 end,
})








local Button = SecTab:CreateButton({
 Name = "Teleport UAD",
 Callback = function()
      loadstring(game:HttpGet("https://pastebin.com/raw/RZmK5JQK"))()
 end,
})








local Button = SecTab:CreateButton({
 Name = "🎅MYS_BasePlate🎄",
 Callback = function()
 loadstring(game:HttpGet("https://pastebin.com/raw/1DJp5VWq"))()
 end,
})








local Button = SecTab:CreateButton({
 Name = "Rewind - Hold C when activated",
 Callback = function()
 loadstring(game:HttpGet("https://raw.githubusercontent.com/saya420/Mic-Up/main/Flashback-Rewind"))()
 end,
})




local FifthSection = MainTab:CreateSection("- 🔥 MYS ANIM SELECTOR 💯 -")





-- Define missing StopAnim function
local function StopAnim()
 -- Stop animations or reset as required
 print("Stopping animation...") -- Example placeholder
end



-- Animation dropdown for character animations
local AnimationDropdown = MainTab:CreateDropdown({
  Name = "Animation Selector",
  Options = {
      "Default", "Vampire Animation", "Pirate Animation", "Knight Animation",
      "Sneaky Animation", "Ninja Animation", "Cowboy Animation",
      "Zombie Animation", "Cartoony Animation", "Zombie FE"
  },
  CurrentOption = {"Default"},
  MultipleOptions = false,
  Flag = "Dropdown1",
  Callback = function(Options)
      local plr = game.Players.LocalPlayer
      local Animate = plr.Character:WaitForChild("Animate")
     
      if Options[1] == "Vampire Animation" then
          Animate.Disabled = true
          StopAnim()
          Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1083445855"
          Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1083450166"
          Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1083473930"
          Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1083462077"
          Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1083455352"
          Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1083439238"
          Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1083443587"
          plr.Character.Humanoid:ChangeState(3)
          Animate.Disabled = false




      elseif Options[1] == "Pirate Animation" then
          Animate.Disabled = true
          StopAnim()
          Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=750781874"
          Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=750782770"
          Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=750785693"
          Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=750783738"
          Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=750782230"
          Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=750779899"
          Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=750780242"
          plr.Character.Humanoid:ChangeState(3)
          Animate.Disabled = false




      elseif Options[1] == "Knight Animation" then
          Animate.Disabled = true
          StopAnim()
          Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=657595757"
          Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=657568135"
          Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=657552124"
          Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=657564596"
          Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=658409194"
          Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=658360781"
          Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=657600338"
          plr.Character.Humanoid:ChangeState(3)
          Animate.Disabled = false




      elseif Options[1] == "Sneaky Animation" then
          Animate.Disabled = true
          StopAnim()
          Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1132473842"
          Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1132477671"
          Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1132510133"
          Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1132494274"
          Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1132489853"
          Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1132461372"
          Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1132469004"
          plr.Character.Humanoid:ChangeState(3)
          Animate.Disabled = false




      elseif Options[1] == "Ninja Animation" then
          Animate.Disabled = true
          StopAnim()
          Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=656117400"
          Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=656118341"
          Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=656121766"
          Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=656118852"
          Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=656117878"
          Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=656114359"
          Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=656115606"
          plr.Character.Humanoid:ChangeState(3)
          Animate.Disabled = false




      elseif Options[1] == "Cowboy Animation" then
          Animate.Disabled = true
          StopAnim()
          Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1014390418"
          Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1014398616"
          Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1014421541"
          Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1014401683"
          Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1014394726"
          Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1014380606"
          Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1014384571"
          plr.Character.Humanoid:ChangeState(3)
          Animate.Disabled = false




      elseif Options[1] == "Zombie Animation" then
          Animate.Disabled = true
          StopAnim()
          Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616158929"
          Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616160636"
          Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616168032"
          Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616163682"
          Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616161997"
          Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616156119"
          Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616157476"
          plr.Character.Humanoid:ChangeState(3)
          Animate.Disabled = false




          elseif Options[1] == "Cartoony Animation" then
          Animate.Disabled = true
          StopAnim()
          Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=742637544"
          Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=742638445"
          Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=742640026"
          Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=742638842"
          Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=742637942"
          Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=742636889"
          Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=742637151"
          plr.Character.Humanoid:ChangeState(3)
          Animate.Disabled = false




      elseif Options[1] == "Zombie FE" then
          Animate.Disabled = true
          StopAnim()
          Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=3489171152"
          Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=3489171152"
          Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=3489174223"
          Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=3489173414"
          Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616161997"
          Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616156119"
          Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616157476"
          plr.Character.Humanoid:ChangeState(3)
          Animate.Disabled = false




      else
          -- Reset to default animations
          Animate.Disabled = true
          Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=0"
          Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=0"
          Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=0"
          Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=0"
          Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=0"
          Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=0"
          Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=0"
          Animate.Disabled = false
      end
  end,
})








local Button = SecTab:CreateButton({
  Name = "Tp Tool",
  Callback = function()
      local player = game.Players.LocalPlayer
      local mouse = player:GetMouse()

      local tool = Instance.new("Tool")
      tool.Name = "Teleport Tool"
      tool.RequiresHandle = false
      tool.Parent = player.Backpack

      local function teleportToClick()
          local character = player.Character or player.CharacterAdded:Wait()
          local rootPart = character:FindFirstChild("HumanoidRootPart")

          if rootPart and mouse.Target then
              local targetPosition = mouse.Hit.Position
              rootPart.CFrame = CFrame.new(targetPosition + Vector3.new(0, 3, 0))
          end
      end

      tool.Activated:Connect(teleportToClick)
  end
})

local SixTab = Window:CreateTab(" </ Chat > ", nil)
local MainSection = SixTab:CreateSection("- Chatting -")

local ChatBypassBest = SixTab:CreateButton({
Name = "Chat Bypass (UserCreation, not up rn)",
Callback = function()
    --loadstring(game:HttpGet("https://raw.githubusercontent.com/1price/usercreation/refs/heads/main/UserCreation.lua", true))()
    Notify_User("Error:", "The library would close and you would have to rejoin.", 6)
    return Notify_User("[Read]:", "Usercreation bypassing is temporarily disabled.", 6)
end,})

local ClearChatMsgs = SixTab:CreateButton({
Name = "Clear Chat Messages",
Callback = function()
    local TextChatService = getgenv().TextChatService
        
    local chat = TextChatService:WaitForChild("TextChannels"):WaitForChild("RBXGeneral")
        
    local function sendchat(msg)
        chat:SendAsync(msg)
    end
        
    for i = 1, 8 do
        sendchat(" ")
    end
end,})


local GetFakeChatGUI = SixTab:CreateButton({
Name = "Fake Chat GUI",
Callback = function()
    loadstring(game:HttpGet(('https://raw.githubusercontent.com/EnterpriseExperience/FakeChatGUI/main/LmaoBruh.lua')))()
end,})


local SevenTab = Window:CreateTab(" </ Character > ", nil)
local MainSection = SevenTab:CreateSection("- Character -")








local WalkSpeedSliding = SevenTab:CreateSlider({
Name = "WalkSpeed (Default): 16",
Range = {16, 450},
Increment = 1,
Suffix = "",
CurrentValue = 16,
Flag = "walkSpeedValue",
Callback = function(wsVal)
   local Humanoid = getgenv().Humanoid
  
   if Humanoid then
       Humanoid.WalkSpeed = wsVal
   end
end})




if getgenv().Character:FindFirstChildWhichIsA("Humanoid").UseJumpPower == true then
   Rayfield:Notify({
       Title = "Success!",
       Content = "JumpPower is enabled, continuing...",
       Duration = 4,
       Actions = {
          Ignore = {
           Name = "Okay!",
           Callback = function()
               print("...")
           end
          },
       },
   })
   wait()
   local JumpPowerSliding = SevenTab:CreateSlider({
   Name = "JumpPower (Default): 50",
   Range = {50, 500},
   Increment = 1,
   Suffix = "",
   CurrentValue = 50,
   Flag = "jpValue",
   Callback = function(jpVal)
       local Humanoid = getgenv().Character:FindFirstChildWhichIsA("Humanoid")
  
       if Humanoid then
           Humanoid.JumpPower = jpVal
       end
   end})
   wait()
else
   Rayfield:Notify({
       Title = "Detection!",
       Content = "UseJumpPower is disabled, switching...",
       Duration = 4,
       Actions = {
          Ignore = {
           Name = "Okay!",
           Callback = function()
               print("...")
           end
          },
       },
   })
   wait(.2)
   local JumpingHeightSliding = SevenTab:CreateSlider({
   Name = "JumpHeight (Default): 7",
   Range = {7, 400},
   Increment = 1,
   Suffix = "",
   CurrentValue = 7,
   Flag = "JumpingHeightValue",
   Callback = function(jumpHeight)
       local Humanoid = getgenv().Character:FindFirstChildWhichIsA("Humanoid") or getgenv().Character:WaitForChild("Humanoid")
  
       if Humanoid then
           Humanoid.JumpHeight = jumpHeight
       end
   end})
end




local GravSliding = SevenTab:CreateSlider({
Name = "Gravity (Default): 196.2",
Range = {1, 200},
Increment = 1,
Suffix = "",
CurrentValue = 196.2,
Flag = "GravityValue",
Callback = function(gravVal)
   local GetWorkspace = getgenv().Workspace
   GetWorkspace.Gravity = gravVal
end})


local DoCharacterFlicking = SevenTab:CreateToggle({
Name = "Character Flicker (FE)",
CurrentValue = false,
Flag = "CharFlickeringLmao",
Callback = function(Flick)
    if Flick then
        getgenv().CharFlick = true
        while getgenv().CharFlick == true do
            task.wait()
            local Rep_Storage = getgenv().ReplicatedStorage
            local Update_Height_Remote = Rep_Storage:WaitForChild("UpdateHeight") or Rep_Storage:FindFirstChild("UpdateHeight")
            local Update_Depth_Remote = Rep_Storage:WaitForChild("UpdateDepth") or Rep_Storage:FindFirstChild("UpdateDepth")
            local Update_Width_Remote = Rep_Storage:WaitForChild("UpdateWidth") or Rep_Storage:FindFirstChild("UpdateWidth")

            local args = {
                [1] = 0
            }
            
            Update_Height_Remote:FireServer(unpack(args))
            wait()
            local args = {
                [1] = 0
            }
            
            Update_Depth_Remote:FireServer(unpack(args))
            wait()
            local args = {
                [1] = 0
            }
            
            Update_Width_Remote:FireServer(unpack(args))
            wait()
            local args = {
                [1] = 1
            }
            
            Update_Height_Remote:FireServer(unpack(args))
            wait()
            local args = {
                [1] = 1
            }
            
            Update_Depth_Remote:FireServer(unpack(args))
            wait()
            local args = {
                [1] = 1
            }
            
            Update_Width_Remote:FireServer(unpack(args))
        end
    else
        local Rep_Storage = game:GetService("ReplicatedStorage")
        local Modify_User_Remote = Rep_Storage:WaitForChild("ModifyUserEvent") or Rep_Storage:FindFirstChild("ModifyUserEvent")
        
        local Local_Player = getgenv().LocalPlayer
        local Local_Plr_Name = Local_Player.Name or tostring(Local_Player.Name)

        getgenv().CharFlick = false
        wait(1)
        repeat wait() until getgenv().CharFlick == false
        wait(0.3)
        local args = {
            [1] = tostring(Local_Plr_Name)
        }
        
        Modify_User_Remote:FireServer(unpack(args))
    end
end,})
wait()
print("Loading Connection Manager... :[Waiting On Response]:")
wait(.3)
local startEvent = Instance.new("BindableEvent")
startEvent.Name = "ConnectEvent"
startEvent.Parent = game:GetService("ReplicatedStorage")
wait(.1)
local disconnectEvent = Instance.new("BindableEvent")
disconnectEvent.Name = "DisconnectEvent"
disconnectEvent.Parent = game:GetService("ReplicatedStorage")
wait(0.2)
if startEvent and disconnectEvent then
    print("Loaded Connection Manager! -[200 : Success]-")
else
    warn("UNABLE TO LOAD CONNECTION MANAGER, BAD_REQUESTED_RESPONSE")
end
wait()
local Settings = {
    Keybind = "C"
}





local GetInvis = SevenTab:CreateButton({
Name = "Invisible",
Callback = function()
    if getgenv().Invis_Loaded == true or Invis_Loaded and not getgenv().INVIS_DEBUG == true then
        return Notify_User("Error:", "Invisible Is Already Loaded!", 6.5)
    end

    local UserIds = {
        6132973250,
        4437551748,
        7054509230
    }
    
    pcall(function() getgenv().Invis_Loaded = true end)
    
    local ScriptStarted = false
    local Transparency = true
    local Keybind = Settings.Keybind
    local NoClip = true
    
    local Player = getgenv().LocalPlayer
    local RealCharacter = Player.Character or Player.CharacterAdded:Wait()
    
    local IsInvisible = false
    
    RealCharacter.Archivable = true

    local FakeCharacter = RealCharacter:Clone()
    local Workspace_Service = getgenv().Workspace

    local Part
    Part = Instance.new("Part", Workspace_Service)
    Part.Anchored = true
    Part.Size = Vector3.new(200, 1, 200)
    Part.CFrame = CFrame.new(9999, 50, 999)
    Part.CanCollide = true
    Part.Name = "BasePart"
    
    FakeCharacter.Parent = Workspace_Service
    FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)
    
    for i, v in pairs(RealCharacter:GetChildren()) do
        if v:IsA("LocalScript") then
            local clone = v:Clone()
            clone.Disabled = true
            clone.Parent = FakeCharacter
        end
    end

    if Transparency then
        for i, v in pairs(FakeCharacter:GetDescendants()) do
            if v:IsA("BasePart") then
                v.Transparency = 0.5
            end
        end
    end

    local CanInvis = true

    function RealCharacterDied()
        local Workspace_Service = getgenv().Workspace

        CanInvis = false
        RealCharacter:Destroy()
        RealCharacter = getgenv().Character
        CanInvis = true
        isinvisible = false
        FakeCharacter:Destroy()
        getgenv().Workspace.CurrentCamera.CameraSubject = RealCharacter:WaitForChild("Humanoid")
        
        RealCharacter.Archivable = true
        FakeCharacter = RealCharacter:Clone()
        Part:Destroy()
        Part = Instance.new("Part", Workspace_Service)
        Part.Anchored = true
        Part.Size = Vector3.new(200, 1, 200)
        Part.CFrame = CFrame.new(999, 999, 999)
        Part.CanCollide = true
        Part.Name = "MeshPart"
        FakeCharacter.Parent = Workspace_Service
        FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)
        
        for i, v in pairs(RealCharacter:GetChildren()) do
            if v:IsA("LocalScript") then
                local clone = v:Clone()
                clone.Disabled = true
                clone.Parent = FakeCharacter
            end
        end

        if Transparency then
            for i, v in pairs(FakeCharacter:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.Transparency = 0.8
                end
            end
        end

        RealCharacter.Humanoid.Died:Connect(function()
            getgenv().Invis_Loaded = false
            RealCharacter:Destroy()
            FakeCharacter:Destroy()
        end)
        Player.CharacterAppearanceLoaded:Connect(RealCharacterDied)
    end

    RealCharacter.Humanoid.Died:Connect(function()
        getgenv().Invis_Loaded = false
        RealCharacter:Destroy()
        FakeCharacter:Destroy()
    end)

    Player.CharacterAppearanceLoaded:Connect(RealCharacterDied)

    local Run_Service = game:GetService("RunService")
    local PseudoAnchor
    Run_Service.RenderStepped:Connect(function()
        if PseudoAnchor ~= nil then
            PseudoAnchor.CFrame = Part.CFrame * CFrame.new(0, 5, 0)
        end
        if NoClip then
            for i, v in pairs(FakeCharacter:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false
                end
            end
        end
    end)
    
    PseudoAnchor = FakeCharacter.HumanoidRootPart
    local function Invisible()
        if IsInvisible == false then
            local StoredCF = RealCharacter.HumanoidRootPart.CFrame
            RealCharacter.HumanoidRootPart.CFrame = FakeCharacter.HumanoidRootPart.CFrame
            FakeCharacter.HumanoidRootPart.CFrame = StoredCF
            RealCharacter.Humanoid:UnequipTools()
            Player.Character = FakeCharacter
            Workspace_Service.CurrentCamera.CameraSubject = FakeCharacter.Humanoid
            PseudoAnchor = RealCharacter.HumanoidRootPart
            for i, v in pairs(FakeCharacter:GetChildren()) do
                if v:IsA("LocalScript") then
                    v.Disabled = false
                end
            end

            IsInvisible = true
        else
            local StoredCF = FakeCharacter.HumanoidRootPart.CFrame
            FakeCharacter.HumanoidRootPart.CFrame = RealCharacter.HumanoidRootPart.CFrame
            
            RealCharacter.HumanoidRootPart.CFrame = StoredCF
            
            FakeCharacter.Humanoid:UnequipTools()
            Player.Character = RealCharacter
            Workspace_Service.CurrentCamera.CameraSubject = RealCharacter.Humanoid
            PseudoAnchor = FakeCharacter.HumanoidRootPart
            for i, v in pairs(FakeCharacter:GetChildren()) do
                if v:IsA("LocalScript") then
                    v.Disabled = true
                end
            end

            IsInvisible = false
        end
    end

    local User_Input_Service = game:GetService("UserInputService")
    local Sound_Service = game:GetService("SoundService")
    
    User_Input_Service.InputBegan:Connect(function(key, gamep)
        if gamep then
            return
        end
        if key.KeyCode.Name:lower() == Keybind:lower() and CanInvis and RealCharacter and FakeCharacter then
            if RealCharacter:FindFirstChild("HumanoidRootPart") and FakeCharacter:FindFirstChild("HumanoidRootPart") then
                Invisible()
            end
        end
    end)
    local Sound = Instance.new("Sound",Sound_Service)
    Sound.SoundId = "rbxassetid://232127604"
    Sound:Play()
    Notify_User("Success!", "Invisible Has Been Loaded!", 7)
    task.wait(.3)
    Notify_User("Info:", "Press "..tostring(Settings.Keybind).." to change visibility.", 10)
end,})




local invisKeybindSet = SevenTab:CreateInput({
Name = "Invisible Keybind",
PlaceholderText = "Keybind Here",
RemoveTextAfterFocusLost = false,
Callback = function(TheBind)
    Settings.Keybind = tostring(TheBind)
    local Humanoid = getgenv().Humanoid
end,})

local FrozenChar = SevenTab:CreateToggle({
Name = "Freeze Your Character",
CurrentValue = false,
Flag = "AntiMovement",
Callback = function(hasFrozenChar)
   if hasFrozenChar then
       local Character = getgenv().Character
       local Workspace_Service = game:GetService("Workspace") or workspace or cloneref(game:GetService("Workspace"))
       local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart", true) or Workspace_Service:WaitForChild(LocalPlayer.Name):WaitForChild("HumanoidRootPart", 999)
       getgenv().FreezingChar = true
       if Character and HumanoidRootPart or Character:FindFirstChild("HuamnoidRootPart") then
           if getgenv().FreezingChar == true then
               HumanoidRootPart.Anchored = true
           end
       else
           getgenv().FreezingChar = false
       end
   else
       local Character = getgenv().Character
       local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart", true)
       if Character and HumanoidRootPart or Character:FindFirstChild("HumanoidRootPart") then
           getgenv().FreezingChar = false
           wait(0.2)
           HumanoidRootPart.Anchored = false
       else
           getgenv().FreezingChar = false
       end
   end
end})

local ThuTab = Window:CreateTab(" </ MISC >  ", nil)
local MainSection = ThuTab:CreateSection("- Misc -")


local CopyAnimButtonPlr = ThuTab:CreateButton({
Name = "CopyAnim Whitelisted",
Callback = function()
    local Players = getgenv().Players
    local LocalPlayer = getgenv().LocalPlayer
    local Character = getgenv().Character
    local Humanoid = getgenv().Humanoid
    local HumanoidRootPart = getgenv().HumanoidRootPart
    local Workspace = game:GetService("Workspace")
    getgenv().singlePlayerTable = getgenv().singlePlayerTable or {}

    function getThatPlr()
        
        for i, v in pairs(Players:GetChildren()) do
            if getgenv().singlePlayerTable[v.Name] then
                return v
            end
        end
        return nil
    end
    
    local thePlayer = getThatPlr()
    
    if thePlayer then
        print("Found Player: "..tostring(thePlayer.Name)..", DisplayName: "..tostring(thePlayer.DisplayName)..", UserID: "..tostring(thePlayer.UserId))
    else
        return Rayfield:Notify({
            Title = "[ERROR]: 0",
            Content = "Player was not found!",
            Duration = 4,
            Actions = {
               Ignore = {
                Name = "Okay!",
                Callback = function()
                    print("...")
                end
               },
            },
        })
    end

    local Humanoid = Character:FindFirstChildWhichIsA("Humanoid") or Character:WaitForChild("Humanoid")
    local TheirCharacter = thePlayer.Character or thePlayer.CharacterAdded:Wait()
    local GetTheirHumanoid = TheirCharacter:FindFirstChildWhichIsA("Humanoid") or TheirCharacter:WaitForChild("Humanoid")
    
    if thePlayer then
        print("Found Player: "..tostring(thePlayer.Name)..", DisplayName: "..tostring(thePlayer.DisplayName)..", UserID: "..tostring(thePlayer.UserId))
    else
        return Rayfield:Notify({
            Title = "[ERROR]: 0",
            Content = "Player was not found!",
            Duration = 7,
            Actions = {
               Ignore = {
                Name = "Okay!",
                Callback = function()
                    print("...")
                end
               },
            },
        })
    end
    
    for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
        animTrack:Stop()
    end
    
    local getTheirChar = thePlayer.Character or thePlayer.CharacterAdded:Wait()
    local theirHumanoid = getTheirChar:FindFirstChildWhichIsA('Humanoid') or getTheirChar:WaitForChild('Humanoid')
    
    local function copyAnimations()
        for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end
    
        for _, animTrack in pairs(theirHumanoid:GetPlayingAnimationTracks()) do
            if not string.find(animTrack.Animation.AnimationId, "507768375") then
                local copiedAnim = Humanoid:LoadAnimation(animTrack.Animation)
                copiedAnim:Play(0.1, 1, animTrack.Speed)
                copiedAnim.TimePosition = animTrack.TimePosition
    
                task.spawn(function()
                    animTrack.Stopped:Wait()
                    copiedAnim:Stop()
                    copiedAnim:Destroy()
                end)
            end
        end
    end
    
    copyAnimations()
end,})


local Button = ThuTab:CreateButton({
  Name = "Copy Discord Invite Link..",
  Callback = function()
      setclipboard("https://discord.gg/djMQRCNAAZ")
      print("Discord link copied to clipboard!")
      Rayfield:Notify({
          Title = "Link Copied!",
          Content = "Discord invite link has been copied to your clipboard.",
          Duration = 3,
      })
  end
})


local AutoLikingPlayer = ThuTab:CreateToggle({
Name = "{Avatar-UI}: Auto Like Player",
CurrentValue = false,
Flag = "likingPlayerAuto",
Callback = function(likeLol)
    local Workspace_Service = game:GetService("Workspace") or workspace
    local Avatar_UI = Workspace_Service:FindFirstChild("AvatarUI") or Workspace_Service:WaitForChild("AvatarUI")
    local Like_Button = Avatar_UI:FindFirstChild("LikeButton") or Avatar_UI:WaitForChild("LikeButton")
    local Click_Detector_Input = Like_Button:FindFirstChild("ClickDetector") or Like_Button.ClickDetector or Like_Button:FindFirstChildWhichIsA("ClickDetector") or Like_Button:WaitForChild("ClickDetector") or Like_Button:FindFirstChildOfClass("ClickDetector")

    if likeLol then
        getgenv().alrLike = true
        while getgenv().alrLike == true do
        wait()
            fireclickdetector(Click_Detector_Input)
        end
    else
        getgenv().alrLike = false
    end
end,})

local dislikePlayersAvatar = ThuTab:CreateToggle({
Name = "{Avatar-UI}: Auto Dislike Player",
CurrentValue = false,
Flag = "dislikingEverybody",
Callback = function(dislikeButton)
    local Workspace_Service = game:GetService("Workspace") or workspace
    local Avatar_UI = Workspace_Service:FindFirstChild("AvatarUI") or Workspace_Service:WaitForChild("AvatarUI")
    local Like_Button = Avatar_UI:FindFirstChild("DislikeButton") or Avatar_UI:WaitForChild("DislikeButton")
    local Click_Detector_Input = Like_Button:FindFirstChild("ClickDetector") or Like_Button.ClickDetector or Like_Button:FindFirstChildWhichIsA("ClickDetector") or Like_Button:WaitForChild("ClickDetector") or Like_Button:FindFirstChildOfClass("ClickDetector")
        
    if dislikeButton then
        if fireclickdetector then
            getgenv().Disliking = true
            while getgenv().Disliking == true do
            wait()
                fireclickdetector(Click_Detector_Input)
            end
        elseif not fireclickdetector then
            getgenv().Disliking = false
        end
    else
        getgenv().Disliking = false
    end
end,})

local function Notify_User(title, content, time)
    Rayfield:Notify({
        Title = tostring(title),
        Content = tostring(content),
        Duration = tonumber(time),
        Actions = {
            Ignore = {
                Name = "Okay!",
                Callback = function()
                    print("...")
                end
            },
        },
    })
end

local WhitelistFriendPlr = ThuTab:CreateToggle({
Name = "{Avatar-UI}: Only Like Friend",
CurrentValue = false,
Flag = "LikingOnlyFriends",
Callback = function(myFriendsLiked)
    if myFriendsLiked then
        local Workspace_Service = getgenv().Workspace
        local Avatar_UI = Workspace_Service:WaitForChild("AvatarUI")
        local Like_Button = Avatar_UI:FindFirstChild("LikeButton") or Avatar_UI:WaitForChild("LikeButton")
        local Click_Detector_Input = Like_Button:FindFirstChild("ClickDetector")
        local Avatar_Part_UI = Avatar_UI:WaitForChild("AvatarUI")
        local Image_Label = Avatar_Part_UI:WaitForChild("SurfaceGui"):WaitForChild("ImageLabel")
        
        local Local_Player = getgenv().LocalPlayer
        
        local friend_find = findplr("friend")
        
        if not friend_find then
            getgenv().Like_Friends = false
            return Notify_User("Error:", "You have 0 friends in this server!", 6)
        end
        
        function like_friend_only(user)
            if user then
                local expectedURL = "rbxthumb://type=Avatar&id=" .. tostring(user.UserId) .. "&w=420&h=420"
                if Image_Label.Image == expectedURL then
                    fireclickdetector(Click_Detector_Input, 999)
                    return true
                end
            end
            return false
        end
        
        if friend_find then
            getgenv().Like_Friends = true
            while getgenv().Like_Friends == true do
                wait()
                local liked = like_friend_only(friend_find)
                if not liked then
                    getgenv().Like_Friends = false
                end
            end
        else
            getgenv().Like_Friends = false
        end
    else
        getgenv().Like_Friends = false
    end
end,})






local GraphicsEnhancer = ThuTab:CreateButton({
Name = "Graphics Enhancer",
Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/EnterpriseExperience/PublicScriptsOnRobloxExploiting/refs/heads/main/GraphicsEnhancer.lua"))()
end,})

local Button = ThuTab:CreateButton({
  Name = "Shaders🌟",
  Callback = function()
      local Light = game.Lighting








      local function toggleShaders()
          if #Light:GetChildren() > 0 then
              for _, v in pairs(Light:GetChildren()) do
                  v:Destroy()
              end
              Light.Brightness = 1.35
              Light.ExposureCompensation = 0
          else
              local Sky = Instance.new("Sky")
              local Bloom = Instance.new("BloomEffect")
              local Blur = Instance.new("BlurEffect")
              local ColorC = Instance.new("ColorCorrectionEffect")
              local SunRays = Instance.new("SunRaysEffect")








              Light.Brightness = 2
              Light.ExposureCompensation = 0.1
              Light.ClockTime = 17.60








              Sky.SkyboxBk = "http://www.roblox.com/asset/?id=144933338"
              Sky.SkyboxDn = "http://www.roblox.com/asset/?id=144933350"
              Sky.SkyboxFt = "http://www.roblox.com/asset/?id=144933244"
              Sky.SkyboxRt = "http://www.roblox.com/asset/?id=144933299"
              Sky.SkyboxUp = "http://www.roblox.com/asset/?id=144931564"
              Sky.StarCount = 5000
              Sky.SunAngularSize = 3
              Sky.Parent = Light








              Bloom.Intensity = 1.5
              Bloom.Size = 10
              Bloom.Threshold = 0.8
              Bloom.Parent = Light








              Blur.Size = 4
              Blur.Parent = Light








              ColorC.Brightness = 0
              ColorC.Contrast = 0.1
              ColorC.Saturation = 0.75
              ColorC.TintColor = Color3.fromRGB(255, 255, 255)
              ColorC.Parent = Light








              SunRays.Intensity = 0.050
              SunRays.Spread = 0.3
              SunRays.Parent = Light
          end
      end








      toggleShaders()
  end
})








local CtrlClickTP = ThuTab:CreateToggle({
Name = "Ctrl Click-TP {Hold CTRL and Click}",
CurrentValue = false,
Flag = "CtrlClickTPConnection",
Callback = function(toggleConnectionClickTP)
   if toggleConnectionClickTP then
       if getgenv().TeleportConnection then getgenv().TeleportConnection:Disconnect() end




       local UIS = game:GetService("UserInputService")
       local Player = game.Players.LocalPlayer
       local Mouse = Player:GetMouse()




       function GetCharacter()
           return Player.Character
       end




       function Teleport(pos)
           local Char = GetCharacter()
           if Char then
               Char:MoveTo(pos)
           end
       end




       getgenv().TeleportConnection = UIS.InputBegan:Connect(function(input)
           if input.UserInputType == Enum.UserInputType.MouseButton1 and UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
               Teleport(Mouse.Hit.p)
           end
       end)
   else
       if getgenv().TeleportConnection then
           getgenv().TeleportConnection:Disconnect()
           getgenv().TeleportConnection = nil
       end
   end
end,})




local FifthTab = Window:CreateTab(" </ Booths > ", nil)
local MainSection = FifthTab:CreateSection("- Booths -")


local inputBypassTextBooth = FifthTab:CreateInput({
Name = "Booth Text Bypass",
PlaceholderText = "Text",
RemoveTextAfterFocusLost = true,
Callback = function(enteredTextInput)
    local TextChatService = getgenv().TextChatService
    
    
    local Rep_Storage = game:GetService("ReplicatedStorage")
    local Booth_Remote = Rep_Storage:FindFirstChild("UpdateBoothText") or Rep_Storage:WaitForChild("UpdateBoothText")

    local letters = {
        set1 = {
            ["a"] = "ẳ",
            ["b"] = "ɓ",
            ["c"] = "ㄈ",
            ["d"] = "ȡ",
            ["e"] = "ȇ",
            ["f"] = "ӻ",
            ["g"] = "ɠ",
            ["h"] = "ȟ",
            ["i"] = "׀",
            ["j"] = "ǰ",
            ["k"] = "ҟ",
            ["l"] = "ȴ",
            ["m"] = "ɱ",
            ["n"] = "冂",
            ["o"] = "ό",
            ["p"] = "ᵽ",
            ["q"] = "ԛ",
            ["r"] = "ŗ",
            ["s"] = "ȿ",
            ["t"] = "丅",
            ["u"] = "ȕ",
            ["v"] = "ѵ",
            ["w"] = "ώ",
            ["x"] = "ẍ",
            ["y"] = "ƴ",
            ["z"] = "ȥ",
        }
    }

    local numbers = {
        set1 = {
            ["0"] = "Θ",
            ["1"] = "Ɩ",
            ["2"] = "ƻ",
            ["3"] = "Ʒ",
            ["4"] = "🄅",
            ["5"] = "Ƽ",
            ["6"] = "Ϭ",
            ["7"] = "🄈",
            ["8"] = "Ȣ",
            ["9"] = "Θ",
        }
    }

    local function convert(text)
        local letters_set = letters["set1"]
        local numbers_set = numbers["set1"]
    
        local converted = ""
        for i = 1, #text do
            local char = text:sub(i, i)
            local lower_char = char:lower()
    
            if char:match("%a") then
                if lettersBypass then
                    converted = converted .. char
                else
                    converted = converted .. (letters_set[lower_char] or char)
                end
            elseif char:match("%d") then
                if numbersBypass then
                    converted = converted .. char
                else
                    converted = converted .. (numbers_set[char] or char)
                end
            else
                converted = converted .. char
            end
        end
        return converted
    end

    local booth_colors = {
        "Teal",
        "Gray",
        "Red",
    }

    local function color_selector()
        local randomIndex = math.random(1, #booth_colors)
        return booth_colors[randomIndex]
    end

    local booth_fonts = {
        "DenkOne",
        "GrenzeGotisch",
        "SourceSans"    
    }

    local function font_selector()
        local randomIndex = math.random(1, #booth_fonts)
        return booth_fonts[randomIndex]
    end

    wait(.2)
    local function send_bypass_config(msg)
        local function getStall()
            for i,v in pairs(getgenv().Workspace.Booth:GetChildren()) do
                if v.User.SurfaceGui.ImageLabel.Image == "https://www.roblox.com/headshot-thumbnail/image?userId="..tostring(getgenv().LocalPlayer.UserId).."&width=420&height=420&format=png" then
                    return v
                end
            end
            return nil
        end

        local LocalStall = getStall()
        
        if not LocalStall then
            return Rayfield:Notify({
                Title = "Error: No Booth",
                Content = "You do not own a booth!",
                Duration = 7,
                Image = 4483362458,
                Actions = {
                   Ignore = {
                    Name = "Okay!",
                    Callback = function()
                        print("...")
                    end
                   },
                },
            })
        else
            print(tostring(LocalStall))
        end
        wait()
        local args = {
            [1] = tostring(convert(msg)),
            [2] = tostring(color_selector()),
            [3] = tostring(font_selector())
        }
                
        Booth_Remote:FireServer(unpack(args))
    end

    send_bypass_config(enteredTextInput)
end})

local AutoReclaimToggle = FifthTab:CreateToggle({
Name = "Anti Booth Stealer",
CurrentValue = false,
Flag = "NoStealingBooths",
Callback = function(boothStolen)
   if boothStolen then
       getgenv().AutoClaimEnabled = true
       getgenv().Booth = nil
       getgenv().OwnershipConnection = nil
  
       function notify(title, content, duration)
           Rayfield:Notify({
               Title = tostring(title or "Notification:"),
               Content = tostring(content or "DEFAULT_MESSAGE_CONTENT"),
               Duration = tonumber(duration or 6),
               Image = 4483362458,
               Actions = {
                   Ignore = {
                       Name = "Alright",
                       Callback = function()
                           print("...")
                       end
                   },
               },
           })
       end
  
      
      
  
       local function getStall()
           for _, v in pairs(game:GetService("Workspace").Booth:GetChildren()) do
               if v.Username.BillboardGui.TextLabel.Text == "Owned by: "..LocalPlayer.Name then
                   return v
               end
           end
           return nil
       end




       local get_plr_stall = getStall()




       if not get_plr_stall then
           notify("Error:", "You do not own a booth, claim one!", 6)
           getgenv().AutoClaimEnabled = false
           return
       end
  
       local function monitorOwnership()
           while getgenv().AutoClaimEnabled == true do
               local stall = getStall()
               if stall then
                   getgenv().Booth = stall




                   if not getgenv().OwnershipConnection then
                       getgenv().OwnershipConnection = stall.Username.BillboardGui.TextLabel:GetPropertyChangedSignal("Text"):Connect(function()
                           if stall.Username.BillboardGui.TextLabel.Text ~= "Owned by: " .. LocalPlayer.Name then
                              
                               local OldCF = Character:WaitForChild("HumanoidRootPart").CFrame
  
                               Character:PivotTo(stall:GetPivot())
                               task.wait(0.5)
                               fireproximityprompt(stall:FindFirstChild("Activate"):FindFirstChildOfClass("ProximityPrompt"), 25)
                               task.wait(0.5)
                               game:GetService("ReplicatedStorage"):WaitForChild("UpdateBoothText"):FireServer("", "Gray", "SourceSans")
                               task.wait()
                               game:GetService("ReplicatedStorage"):WaitForChild("UpdateBoothText"):FireServer("", "Gray", "SourceSans")
                               task.wait()
                               game:GetService("ReplicatedStorage"):WaitForChild("UpdateBoothText"):FireServer("", "Gray", "SourceSans")
                               task.wait()
                               game:GetService("ReplicatedStorage"):WaitForChild("UpdateBoothText"):FireServer("", "Gray", "SourceSans")
                               task.wait()
                               game:GetService("ReplicatedStorage"):WaitForChild("UpdateBoothText"):FireServer("", "Gray", "SourceSans")




                               Character:PivotTo(OldCF)
                           end
                       end)
                   end
               else
                   print("Reclaiming Stall...")
                   task.wait()
                   Character:PivotTo(get_plr_stall:GetPivot())
                   task.wait(0.5)
                   fireproximityprompt(get_plr_stall:FindFirstChild("Activate"):FindFirstChildOfClass("ProximityPrompt"), 25)
                   task.wait(0.5)
                   for _ = 1, 3 do
                       game:GetService("ReplicatedStorage"):WaitForChild("UpdateBoothText"):FireServer("", "Gray", "SourceSans")
                       task.wait(0.2)
                   end
               end
  
               task.wait(0.6)
           end
       end




       local plr_booth = getStall()
       if plr_booth and getgenv().AutoClaimEnabled == true then
           monitorOwnership()
       else
           notify("Error:", "No booth found! Claim a booth and toggle this on.", 7.5)
       end
   else
       getgenv().AutoClaimEnabled = false
       if getgenv().OwnershipConnection then
           getgenv().OwnershipConnection:Disconnect()
       else
           warn("Event not connected.")
       end
       getgenv().OwnershipConnection = nil
       getgenv().Booth = nil
   end
end,})








local StallClaimToggle = FifthTab:CreateToggle({
Name = "Claim Any Booth",
CurrentValue = false,
Flag = "StallClaimToggle",
Callback = function(claimAnyBooth)
   if claimAnyBooth then
       getgenv().isToggled = true




       local Folder = getgenv().Workspace.Booth




       local stalls = {
           Folder:FindFirstChild("Booth01"),
           Folder:FindFirstChild("Booth02"),
           Folder:FindFirstChild("Booth03"),
           Folder:FindFirstChild("Booth04"),
           Folder:FindFirstChild("Booth05")
       }




       getgenv().connections = {}




       local function setupProximityPrompt(stall)
           local ProximityPrompt = stall:FindFirstChild("Activate"):FindFirstChildOfClass("ProximityPrompt")
           if ProximityPrompt then
               local function enforceSettings()
                   if getgenv().isToggled then
                       ProximityPrompt.Enabled = true
                       ProximityPrompt.ClickablePrompt = true
                       ProximityPrompt.MaxActivationDistance = 15
                       ProximityPrompt.RequiresLineOfSight = false
                       ProximityPrompt.HoldDuration = 0
                   else
                       ProximityPrompt.Enabled = true
                       ProximityPrompt.ClickablePrompt = true
                       ProximityPrompt.MaxActivationDistance = 10
                       ProximityPrompt.RequiresLineOfSight = true
                       ProximityPrompt.HoldDuration = 1
                   end
               end




               enforceSettings()




               getgenv().connections[ProximityPrompt] = {
                   ProximityPrompt:GetPropertyChangedSignal("Enabled"):Connect(enforceSettings),
                   ProximityPrompt:GetPropertyChangedSignal("ClickablePrompt"):Connect(enforceSettings),
                   ProximityPrompt:GetPropertyChangedSignal("MaxActivationDistance"):Connect(enforceSettings),
                   ProximityPrompt:GetPropertyChangedSignal("RequiresLineOfSight"):Connect(enforceSettings),
                   ProximityPrompt:GetPropertyChangedSignal("HoldDuration"):Connect(enforceSettings)
               }
           end
       end




       for _, stall in ipairs(stalls) do
           if stall then
               setupProximityPrompt(stall)
           end
       end
   else
       getgenv().isToggled = false




       local Folder = getgenv().Workspace.Booth
      
       local stalls = {
           Folder:FindFirstChild("Booth01"),
           Folder:FindFirstChild("Booth02"),
           Folder:FindFirstChild("Booth03"),
           Folder:FindFirstChild("Booth04"),
           Folder:FindFirstChild("Booth05")
       }
      
       for _, stall in ipairs(stalls) do
           if stall then
               local ProximityPrompt = stall:FindFirstChild("Activate"):FindFirstChildOfClass("ProximityPrompt")
               if ProximityPrompt then
                   ProximityPrompt.Enabled = true
                   ProximityPrompt.ClickablePrompt = true
                   ProximityPrompt.MaxActivationDistance = 10
                   ProximityPrompt.RequiresLineOfSight = true
                   ProximityPrompt.HoldDuration = 1
      
                   if getgenv().connections[ProximityPrompt] then
                       for _, conn in ipairs(getgenv().connections[ProximityPrompt]) do
                           conn:Disconnect()
                       end
                       getgenv().connections[ProximityPrompt] = nil
                   end
               end
           end
       end           
   end
end,})








local claimRandomBooth = FifthTab:CreateButton({
Name = "Claim Random Booth",
Callback = function()
   getgenv().notify("Note:", "Make sure you are not invisible when doing this!", 6.5)
   task.wait(.2)
   local Folder = getgenv().Workspace:FindFirstChild("Booth")
   local Character = getgenv().Character




   local function getStall()
       for i,v in pairs(getgenv().Workspace.Booth:GetChildren()) do
           if v:FindFirstChild("Username"):FindFirstChild("BillboardGui").TextLabel.Text == "Owned by: "..tostring(LocalPlayer.Name) then
               return v
           end
       end
       return nil
   end




   local plr_booth = getStall()




   if plr_booth then
       return
   end
  
   local OldCF = getgenv().HumanoidRootPart.CFrame




   local stalls = {
       Folder:FindFirstChild("Booth01"),
       Folder:FindFirstChild("Booth02"),
       Folder:FindFirstChild("Booth03"),
       Folder:FindFirstChild("Booth04"),
       Folder:FindFirstChild("Booth05")
   }




   local function setupProximityPrompt(stall)
       local ProximityPrompt = stall:FindFirstChild("Activate"):FindFirstChildOfClass("ProximityPrompt")
       if ProximityPrompt then
           ProximityPrompt.Enabled = true
           ProximityPrompt.ClickablePrompt = true
           ProximityPrompt.MaxActivationDistance = 15
           ProximityPrompt.RequiresLineOfSight = false
           ProximityPrompt.HoldDuration = 0
       end
   end




   local function Claim_A_Booth()
       local OldCF = getgenv().HumanoidRootPart.CFrame




       local function getStall()
           for i,v in pairs(getgenv().Workspace.Booth:GetChildren()) do
               if v:FindFirstChild("Username"):FindFirstChild("BillboardGui").TextLabel.Text == "Owned by: "..tostring(LocalPlayer.Name) then
                   return v
               end
           end
           return nil
       end




       local plr_booth = getStall()




       local stall = stalls[math.random(1, #stalls)]
       local ProximityPrompt = stall:FindFirstChild("Activate"):FindFirstChildOfClass("ProximityPrompt")
       if stall then
           setupProximityPrompt(stall)
           wait(0.3)
           Character:PivotTo(stall:GetPivot())
           wait(0.3)
           fireproximityprompt(ProximityPrompt)
           wait(0.2)
           local args = {
               [1] = "",
               [2] = "Gray",
               [3] = "SourceSans"
           }
          
           getgenv().ReplicatedStorage:WaitForChild("UpdateBoothText"):FireServer(unpack(args))
           wait(0.2)
           getgenv().HumanoidRootPart.CFrame = OldCF
           wait(.1)
           if plr_booth then
               return
           end
       end
   end
   wait(0.2)
   local stall = stalls[math.random(1, #stalls)]
   setupProximityPrompt(stall)
   wait(0.3)
   Claim_A_Booth()
end,})




local TPOwnerBruh = MainTab:CreateButton({
Name = "Teleport To: Owner Of Script",
Callback = function()
   local OwnerName = "01xMYS"
   if not game.Players:FindFirstChild(OwnerName) then return warn("Owner not found!") end




   if game.Players:FindFirstChild(OwnerName) then
       print("Owner Found! Teleporting...")
       task.wait()
       local OwnerOfScript = game.Players:FindFirstChild(OwnerName)
       getgenv().Character:PivotTo(OwnerOfScript.Character:GetPivot())
       task.wait(.5)
       print("Teleported To Script Owner!")
   else
       return
   end
end,})








local WriteOutBooth = FifthTab:CreateInput({
Name = "Booth Typing Effect (FE)",
CurrentValue = "",
PlaceholderText = "Text To Type",
RemoveTextAfterFocusLost = true,
Flag = "TypingTextAuto",
Callback = function(TypeEffectStall)
   local Booth_Remote = getgenv().ReplicatedStorage:WaitForChild("UpdateBoothText")




   local function typeText(remote, text, typingSpeed)
       local currentText = ""
       for i = 1, #text do
           currentText = string.sub(text, 1, i)
           local color = "Red"
           local font = "SourceSans"
           remote:FireServer(currentText, color, font)
           remote:FireServer(currentText, color, font)
           remote:FireServer(currentText, color, font)
           task.wait(typingSpeed)
       end
   end




   local textToType = tostring(TypeEffectStall)
   local typingSpeed = 1.1
   typeText(Booth_Remote, textToType, typingSpeed)
end,})
if get_http then loadstring(game:HttpGet(('https://raw.githubusercontent.com/EnterpriseExperience/RushTeam/refs/heads/main/rush_team_init.py')))() else warn("Unsupported") end




local ToggleBadWords = FifthTab:CreateToggle({
Name = "Bypassed Booth {FE}",
CurrentValue = false,
Flag = "ToggleBadWords",
Callback = function(Cussing)
   if Cussing then
       getgenv().Cuss = true
       while getgenv().Cuss == true do
       wait(0.5)
           local function getStall()
               for i,v in pairs(getgenv().Workspace.Booth:GetChildren()) do
                   if v.User.SurfaceGui.ImageLabel.Image == "https://www.roblox.com/headshot-thumbnail/image?userId="..tostring(getgenv().LocalPlayer.UserId).."&width=420&height=420&format=png" then
                       return v
                   end
               end
               return nil
           end
          
           local Booth_Remote = getgenv().ReplicatedStorage:FindFirstChild("UpdateBoothText")
          
           local MyStall = getStall()




           if not MyStall or MyStall == nil then
               getgenv().Cuss = false
               return Rayfield:Notify({
                   Title = "Error: No Booth",
                   Content = "You don't own a booth!",
                   Duration = 7,
                   Image = 4483362458,
                   Actions = {
                   Ignore = {
                       Name = "Okay!",
                       Callback = function()
                           print("...")
                       end
                   },
                   },
               })
           end
      
           local colorsList = {
               "Teal",
               "Gray",
               "Red",
           }
      
           local function pickRandomColor()
               local randomIndex = math.random(1, #colorsList)
               return colorsList[randomIndex]
           end
      
           local wordsList = {
               "ɓ׀丅ㄈȟ",
               "ӻȕㄈҟ",
               "ㄈȕ冂丅",
               "ȿȴȕ丅",
               "ҟҟҟ",
               "ŗȇ丅ẳŗȡ",
               "ώȇȇȡ",
               "ώȟόŗȇ",
               "ㄈȕɱ",
               "ɓ׀ɠ ẳȿȿ",
           }
      
           local function pickRandomWord()
               local randomIndex = math.random(1, #wordsList)
               return wordsList[randomIndex]
           end
      
           local fontsList = {
               "DenkOne",
               "GrenzeGotisch",
               "SourceSans"   
           }
      
           local function pickRandomFont()
               local randomIndex = math.random(1, #fontsList)
               return fontsList[randomIndex]
           end
           wait(0.4)
           local args = {
               [1] = tostring(pickRandomWord()),
               [2] = tostring(pickRandomColor()),
               [3] = tostring(pickRandomFont())
           }
              
           Booth_Remote:FireServer(unpack(args))
       end
   else
       getgenv().Cuss = false
   end
end,})












local ViewOwnerBruh = MainTab:CreateToggle({
Name = "View: Owner Of Script",
CurrentValue = false,
Flag = "viewOwner",
Callback = function(viewingOwner)
   if viewingOwner then
       getgenv().spectateOwner = true
       local OwnerName = "01xMYS"
       local Workspace = getgenv().Workspace
       local Camera = Workspace:FindFirstChild("Camera")
       if not getgenv().Players:FindFirstChild(OwnerName) then return warn("Owner not found!") end
  
       if game.Players:FindFirstChild(OwnerName) then
           print("Owner Found! Viewing...")
           task.wait()
           local OwnerOfScript = game.Players:FindFirstChild(OwnerName)
           local Owner_Char = OwnerOfScript.Character
           Camera.CameraSubject = Owner_Char
       else
           return
       end
   else
       local Workspace = getgenv().Workspace
       local Camera = Workspace:FindFirstChild("Camera")




       getgenv().spectateOwner = false
       wait(0.2)
       Camera.CameraSubject = getgenv().Character
   end
end,})








local coloredBooth = FifthTab:CreateToggle({
Name = "Booth Color Changer (FE)",
CurrentValue = false,
Flag = "moveColoredBooth",
Callback = function(boothColors)
   if boothColors then
       getgenv().lmao_colors = true
       while getgenv().lmao_colors == true do
       wait(0.2)
           local args = {
               [1] = "",
               [2] = "Teal",
               [3] = "SourceSans"
           }




           getgenv().ReplicatedStorage:WaitForChild("UpdateBoothText"):FireServer(unpack(args))
           wait(0.2)
           local args = {
               [1] = "",
               [2] = "Red",
               [3] = "SourceSans"
           }




           getgenv().ReplicatedStorage:WaitForChild("UpdateBoothText"):FireServer(unpack(args))
           wait(0.2)
           local args = {
               [1] = "",
               [2] = "Gray",
               [3] = "SourceSans"
           }




           getgenv().ReplicatedStorage:WaitForChild("UpdateBoothText"):FireServer(unpack(args))
       end
   else
       getgenv().lmao_colors = false
   end
end,})








local unclaimPlrBooth = FifthTab:CreateInput({
Name = "Unclaim A Booth",
PlaceholderText = "User Here",
RemoveTextAfterFocusLost = true,
Callback = function(unclaimTheirBooth)
   local Folder = getgenv().Workspace.Booth
   local find_plr_func_booth = findplr(unclaimTheirBooth)




   notify("Note:", "Make sure you are not invisible when doing this!", 6.5)
   task.wait(.2)




   if find_plr_func_booth == getgenv().LocalPlayer then
       notify("Success:", "Removed your booth. [LocalPlayer]", 6.5)
       return getgenv().ReplicatedStorage:WaitForChild("DeleteBoothOwnership"):FireServer()
   end




   if not find_plr_func_booth then
       return notify("error:", "Player not found!", 6.5)
   end




   local function getStall()
       for i,v in pairs(getgenv().Workspace.Booth:GetChildren()) do
           if v ~= getgenv().LocalPlayer and v:FindFirstChild("Username"):FindFirstChild("BillboardGui").TextLabel.Text == "Owned by: "..tostring(find_plr_func_booth) then
               return v
           end
       end
       return nil
   end




   local plr_booth = getStall()




   if not plr_booth and find_plr_func_booth then
       return notify("Error", tostring(find_plr_func_booth).." does not own a booth!", 5, 3)
   end




   local Folder = getgenv().Workspace.Booth




   local OldCF = getgenv().HumanoidRootPart.CFrame




   local stalls = {
       Folder:FindFirstChild("Booth01"),
       Folder:FindFirstChild("Booth02"),
       Folder:FindFirstChild("Booth03"),
       Folder:FindFirstChild("Booth04"),
       Folder:FindFirstChild("Booth05")
   }




   local function setupProximityPrompt(stall)
       local ProximityPrompt = stall:FindFirstChild("Activate"):FindFirstChildOfClass("ProximityPrompt")
       if ProximityPrompt and not ProximityPrompt.Enabled then
           ProximityPrompt.Enabled = true
           ProximityPrompt.ClickablePrompt = true
           ProximityPrompt.MaxActivationDistance = 15
           ProximityPrompt.RequiresLineOfSight = false
           ProximityPrompt.HoldDuration = 0
       end
   end




   local function Claim_A_Booth()
       local OldCF = getgenv().HumanoidRootPart.CFrame




       local stall = plr_booth
       local ProximityPrompt = stall:FindFirstChild("Activate"):FindFirstChildOfClass("ProximityPrompt")
       if stall then
           setupProximityPrompt(stall)
           wait(0.3)
           getgenv().Character:PivotTo(stall:GetPivot())
           wait(0.3)
           fireproximityprompt(ProximityPrompt)
           wait(0.2)
           local args = {
               [1] = "",
               [2] = "Gray",
               [3] = "SourceSans"
           }
          
           getgenv().ReplicatedStorage:WaitForChild("UpdateBoothText"):FireServer(unpack(args))
           wait(0.2)
           getgenv().ReplicatedStorage:WaitForChild("DeleteBoothOwnership"):FireServer()
           wait(0.2)
           getgenv().HumanoidRootPart.CFrame = OldCF
           wait(0.2)
           notify("Success:", "Unclaimed "..tostring(find_plr_func_booth).."'s Booth!", 6.5)
           wait(.1)
           if plr_booth then
               return
           end
       end
   end
   wait(0.2)
   local stall = plr_booth
   setupProximityPrompt(stall)
   wait(0.3)
   Claim_A_Booth()
end,})












local ClaimPlrsBooth = FifthTab:CreateInput({
Name = "Claim Someones Booth",
PlaceholderText = "User Here",
RemoveTextAfterFocusLost = true,
Callback = function(takeThatBooth)
   local Folder = game:GetService("Workspace").Booth
   local find_plr_func_booth = findplr(takeThatBooth)




   getgenv().notify("Note:", "Make sure you are not invisible when doing this!", 6.5)
   task.wait(.2)




   if find_plr_func_booth == getgenv().LocalPlayer then
       getgenv().notify("Success:", "Removed your booth. [LocalPlayer]", 6.5)
       return game:GetService("ReplicatedStorage"):WaitForChild("DeleteBoothOwnership"):FireServer()
   end




   if not find_plr_func_booth then
       return getgenv().notify("Error:", "Player not found!", 6.5)
   end




   local function getStall()
       for i,v in pairs(game:GetService("Workspace").Booth:GetChildren()) do
           if v ~= getgenv().LocalPlayer and v:FindFirstChild("Username"):FindFirstChild("BillboardGui").TextLabel.Text == "Owned by: "..tostring(find_plr_func_booth) then
               return v
           end
       end
       return nil
   end




   local plr_booth = getStall()




   if not plr_booth and find_plr_func_booth then
       return notify("Error:", tostring(find_plr_func_booth).." does not own a booth!", 5)
   end




   local Folder = game:GetService("Workspace").Booth




   local OldCF = getgenv().HumanoidRootPart.CFrame




   local stalls = {
       Folder:FindFirstChild("Booth01"),
       Folder:FindFirstChild("Booth02"),
       Folder:FindFirstChild("Booth03"),
       Folder:FindFirstChild("Booth04"),
       Folder:FindFirstChild("Booth05")
   }




   local function setupProximityPrompt(stall)
       local ProximityPrompt = stall:FindFirstChild("Activate"):FindFirstChildOfClass("ProximityPrompt")
       if ProximityPrompt and not ProximityPrompt.Enabled then
           ProximityPrompt.Enabled = true
           ProximityPrompt.ClickablePrompt = true
           ProximityPrompt.MaxActivationDistance = 15
           ProximityPrompt.RequiresLineOfSight = false
           ProximityPrompt.HoldDuration = 0
       end
   end




   local function Claim_A_Booth()
       local OldCF = getgenv().HumanoidRootPart.CFrame




       local stall = plr_booth
       local ProximityPrompt = stall:FindFirstChild("Activate"):FindFirstChildOfClass("ProximityPrompt")
       if stall then
           setupProximityPrompt(stall)
           wait(0.3)
           Character:PivotTo(stall:GetPivot())
           wait(0.3)
           fireproximityprompt(ProximityPrompt)
           wait(0.2)
           local args = {
               [1] = "",
               [2] = "Gray",
               [3] = "SourceSans"
           }
          
           game:GetService("ReplicatedStorage"):WaitForChild("UpdateBoothText"):FireServer(unpack(args))
           wait(0.2)
           getgenv().HumanoidRootPart.CFrame = OldCF
           wait(0.2)
           notify("Success:", "Claimed "..tostring(find_plr_func_booth).."'s Booth!", 6.5)
           wait(.1)
           if plr_booth then
               return
           end
       end
   end
   wait(0.2)
   local stall = plr_booth
   setupProximityPrompt(stall)
   wait(0.3)
   Claim_A_Booth()
end,})

local AutoReclaimToggle = FifthTab:CreateToggle({
Name = "Anti Booth Stealer",
CurrentValue = false,
Flag = "NoStealingBooths",
Callback = function(boothStolen)
   if boothStolen then
       getgenv().AutoClaimEnabled = true
       getgenv().Booth = nil
       getgenv().OwnershipConnection = nil
  
       function notify(title, content, duration)
           Rayfield:Notify({
               Title = tostring(title or "Notification:"),
               Content = tostring(content or "DEFAULT_MESSAGE_CONTENT"),
               Duration = tonumber(duration or 6),
               Image = 4483362458,
               Actions = {
                   Ignore = {
                       Name = "Alright",
                       Callback = function()
                           print("...")
                       end
                   },
               },
           })
       end
  
       local function getStall()
           for _, v in pairs(game:GetService("Workspace").Booth:GetChildren()) do
               if v.Username.BillboardGui.TextLabel.Text == "Owned by: "..LocalPlayer.Name then
                   return v
               end
           end
           return nil
       end




       local get_plr_stall = getStall()




       if not get_plr_stall then
           notify("Error:", "You do not own a booth, claim one!", 6)
           getgenv().AutoClaimEnabled = false
           return
       end
  
       local function monitorOwnership()
           while getgenv().AutoClaimEnabled == true do
               local stall = getStall()
               if stall then
                   getgenv().Booth = stall




                   if not getgenv().OwnershipConnection then
                       getgenv().OwnershipConnection = stall.Username.BillboardGui.TextLabel:GetPropertyChangedSignal("Text"):Connect(function()
                           if stall.Username.BillboardGui.TextLabel.Text ~= "Owned by: " .. LocalPlayer.Name then
                              
                               local OldCF = Character:WaitForChild("HumanoidRootPart").CFrame
  
                               Character:PivotTo(stall:GetPivot())
                               task.wait(0.5)
                               fireproximityprompt(stall:FindFirstChild("Activate"):FindFirstChildOfClass("ProximityPrompt"), 25)
                               task.wait(0.5)
                               game:GetService("ReplicatedStorage"):WaitForChild("UpdateBoothText"):FireServer("", "Gray", "SourceSans")
                               task.wait()
                               game:GetService("ReplicatedStorage"):WaitForChild("UpdateBoothText"):FireServer("", "Gray", "SourceSans")
                               task.wait()
                               game:GetService("ReplicatedStorage"):WaitForChild("UpdateBoothText"):FireServer("", "Gray", "SourceSans")
                               task.wait()
                               game:GetService("ReplicatedStorage"):WaitForChild("UpdateBoothText"):FireServer("", "Gray", "SourceSans")
                               task.wait()
                               game:GetService("ReplicatedStorage"):WaitForChild("UpdateBoothText"):FireServer("", "Gray", "SourceSans")




                               Character:PivotTo(OldCF)
                           end
                       end)
                   end
               else
                   print("Reclaiming Stall...")
                   task.wait()
                   Character:PivotTo(get_plr_stall:GetPivot())
                   task.wait(0.5)
                   fireproximityprompt(get_plr_stall:FindFirstChild("Activate"):FindFirstChildOfClass("ProximityPrompt"), 25)
                   task.wait(0.5)
                   for _ = 1, 3 do
                       game:GetService("ReplicatedStorage"):WaitForChild("UpdateBoothText"):FireServer("", "Gray", "SourceSans")
                       task.wait(0.2)
                   end
               end
  
               task.wait(0.6)
           end
       end




       local plr_booth = getStall()
       if plr_booth and getgenv().AutoClaimEnabled == true then
           monitorOwnership()
       else
           notify("Error:", "No booth found! Claim a booth and toggle this on.", 7.5)
       end
   else
       getgenv().AutoClaimEnabled = false
       if getgenv().OwnershipConnection then
           getgenv().OwnershipConnection:Disconnect()
       else
           warn("Event not connected.")
       end
       getgenv().OwnershipConnection = nil
       getgenv().Booth = nil
   end
end,})

local RemoveBooths = FifthTab:CreateButton({
Name = "Remove Every Booth",
Callback = function()
   local GetWorkspace = game:GetService("Workspace") or cloneref(game:GetService("Workspace")) or workspace or game.Workspace or game:FindService("Workspace")
   local Folder = GetWorkspace:FindFirstChild("Booth") or GetWorkspace:WaitForChild("Booth")
  
   local Rep_Storage = game:GetService("ReplicatedStorage") or cloneref(game:GetService("ReplicatedStorage")) or game.ReplicatedStorage or game:FindService("ReplicatedStorage")
   local Delete_Booth_Remote = Rep_Storage:FindFirstChild("DeleteBoothOwnership") or Rep_Storage:WaitForChild("DeleteBoothOwnership")
  
  
   local OldCF = getgenv().HumanoidRootPart.CFrame




   local function fireAndUnclaimStall(stall)
       local proximityPrompt = stall:FindFirstChild("Activate"):FindFirstChildOfClass("ProximityPrompt")
       if proximityPrompt then
           proximityPrompt.ClickablePrompt = true
           proximityPrompt.RequiresLineOfSight = false
           proximityPrompt.HoldDuration = 0
           proximityPrompt.MaxActivationDistance = 17
           wait(0.3)
           Character:PivotTo(stall:GetPivot())
           wait(0.1)
           Character:WaitForChild("HumanoidRootPart").Anchored = true
           wait(0.3)
           fireproximityprompt(proximityPrompt, 10)
           wait(0.5)
           Delete_Booth_Remote:FireServer()
           wait(0.2)
           Character:WaitForChild("HumanoidRootPart").Anchored = false
       elseif not proximityPrompt then
           return Rayfield:Notify({
               Title = "Failed!",
               Content = "ProximityPrompt does not exist!",
               Duration = 7,
               Image = 4483362458,
               Actions = {
                  Ignore = {
                   Name = "Okay!",
                   Callback = function()
                       print("...")
                   end
                  },
               },
           })
       end
   end




   local function unclaimStalls()
       for _, stall in pairs(Folder:GetChildren()) do
           if stall and stall:FindFirstChild("Activate") then
               wait(0.3)
               fireAndUnclaimStall(stall)
           end
       end
   end
  
   wait(0.2)
   unclaimStalls()
   wait(0.3)
   Character:WaitForChild("HumanoidRootPart").CFrame = OldCF
   wait(0.2)
   print("Finished Unclaiming ALL Booths.")
end,})


local EighthTab = Window:CreateTab("</ Teleports >", nil)
local CreditsSection = EighthTab:CreateSection("- Mic Up -")


local PrivRoomFloor = EighthTab:CreateButton({
Name = "TP To Private Room (Inside)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart

    HumanoidRootPart.CFrame = CFrame.new(4220.82275, 2.76511836, 60.7681046)
end,})

local NextToBathrooms = EighthTab:CreateButton({
Name = "TP To Room Next To Bathrooms",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart

    HumanoidRootPart.CFrame = CFrame.new(-108.536659, 5.38924313, 135.303314)
end,})

local TPToBathrooms = EighthTab:CreateButton({
Name = "TP To Bathrooms",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart

    HumanoidRootPart.CFrame = CFrame.new(-72.3955917, 5.09832525, 93.0914459)
end,})

local TPToChilling = EighthTab:CreateButton({
Name = "TP To Chill Spot",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart

    HumanoidRootPart.CFrame = CFrame.new(228.970184, 5.75081444, -21.5613441)
end,})

local TPPicnicFirst = EighthTab:CreateButton({
Name = "TP To Picnic (Seat 1)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart

    HumanoidRootPart.CFrame = CFrame.new(85.846756, 3.61196709, -29.8345909)
end,})

local TPPicnicSecond = EighthTab:CreateButton({
Name = "TP To Picnic (Seat 2)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart

    HumanoidRootPart.CFrame = CFrame.new(76.6581955, 3.61196709, -29.8332996)
end,})

local TPMicFirst = EighthTab:CreateButton({
Name = "TP To Stage (Mic 1)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    HumanoidRootPart.CFrame = CFrame.new(39.2528572, 7.80023623, -67.7634125)
end,})

local TPMicSecond = EighthTab:CreateButton({
Name = "TP To Stage (Mic 2)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart

    HumanoidRootPart.CFrame = CFrame.new(14.8289356, 7.80023623, -67.7656097)
end,})

local TPMiddleRoomArea = EighthTab:CreateButton({
Name = "TP To Middle Room (Tent)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    
    HumanoidRootPart.CFrame = CFrame.new(70.9464493, 5.62692404, 24.2968006)
end,})

local TPBoothRows = EighthTab:CreateButton({
Name = "TP To Booth Rows (Table)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    
    HumanoidRootPart.CFrame = CFrame.new(26.7397423, 7.81395245, 86.7164536)
end,})

local TPToTowerFloatPart = EighthTab:CreateButton({
Name = "TP To Tower (Float Up Part)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    
    HumanoidRootPart.CFrame = CFrame.new(61.3288841, 72.0192184, 215.731613)
end,})

local TPToTowerTop = EighthTab:CreateButton({
Name = "TP To Tower (Top)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    
    HumanoidRootPart.CFrame = CFrame.new(63.2298126, 284.407227, 193.529007)
end,})

local TPToHighestPoint = EighthTab:CreateButton({
Name = "TP To Tower (Highest Part)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    
    HumanoidRootPart.CFrame = CFrame.new(58.0468788, 313.312622, 225.215027)
end,})

local TPBooth1 = EighthTab:CreateButton({
Name = "TP To Booth-1",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    local Workspace = game:GetService("Workspace")
    local Booth_Folder = Workspace:FindFirstChild("Booth")
    local Booth = Booth_Folder:FindFirstChild("Booth01")
    Character:PivotTo(Booth:GetPivot())
end,})

local TPBooth2 = EighthTab:CreateButton({
Name = "TP To Booth-2",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    local Workspace = game:GetService("Workspace")
    local Booth_Folder = Workspace:FindFirstChild("Booth")
    local Booth = Booth_Folder:FindFirstChild("Booth02")
    Character:PivotTo(Booth:GetPivot())
end,})

local TPBooth3 = EighthTab:CreateButton({
Name = "TP To Booth-3",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    local Workspace = game:GetService("Workspace")
    local Booth_Folder = Workspace:FindFirstChild("Booth")
    local Booth = Booth_Folder:FindFirstChild("Booth03")
    Character:PivotTo(Booth:GetPivot())
end,})

local TPBooth4 = EighthTab:CreateButton({
Name = "TP To Booth-4",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    local Workspace = game:GetService("Workspace")
    local Booth_Folder = Workspace:FindFirstChild("Booth")
    local Booth = Booth_Folder:FindFirstChild("Booth04")
    Character:PivotTo(Booth:GetPivot())
end,})

local TPBooth5 = EighthTab:CreateButton({
Name = "TP To Booth-5",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    local Workspace = game:GetService("Workspace")
    local Booth_Folder = Workspace:FindFirstChild("Booth")
    local Booth = Booth_Folder:FindFirstChild("Booth05")
    Character:PivotTo(Booth:GetPivot())
end,})

local TPToDonutShop = EighthTab:CreateButton({
Name = "TP To Donut Shop",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    
    HumanoidRootPart.CFrame = CFrame.new(-80.8301239, 3.1662631, -82.6656799)
end,})

local TPSeat1Donut = EighthTab:CreateButton({
Name = "TP To Donut Shop (Seat 1)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    
    HumanoidRootPart.CFrame = CFrame.new(-98.4535675, 4.04168415, -96.7826004)
end,})

local TPSeat1Donut = EighthTab:CreateButton({
Name = "TP To Donut Shop (Seat 2)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    
    HumanoidRootPart.CFrame = CFrame.new(-91.7390671, 4.04168415, -90.0620728)
end,})

local TPTableSeat1 = EighthTab:CreateButton({
Name = "TP To Donut Shop (Table Seat 1)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    
    HumanoidRootPart.CFrame = CFrame.new(-102.440971, 4.51146317, -66.6184387)
end,})

local TPTableSeat2 = EighthTab:CreateButton({
Name = "TP To Donut Shop (Table, Seat 2)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    
    HumanoidRootPart.CFrame = CFrame.new(-94.6592941, 4.51146317, -74.3931046)
end,})

local TPBehindCounter = EighthTab:CreateButton({
Name = "TP To Donut Shop (Behind Counter)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    
    HumanoidRootPart.CFrame = CFrame.new(-122.382172, 3.22726321, -83.5359192)
end,})

local TPAboveRelax = EighthTab:CreateButton({
Name = "TP Above Relaxing Room",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    
    HumanoidRootPart.CFrame = CFrame.new(-97.4412308, 24.4840164, 121.394676)
end,})

local TPSubmitNoteBoard = EighthTab:CreateButton({
Name = "TP To Submit Note Board",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    
    HumanoidRootPart.CFrame = CFrame.new(58.6107864, 4.99999857, 245.690369)
end,})

local TPStageMic = EighthTab:CreateButton({
Name = "TP To Stage Mic",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    
    HumanoidRootPart.CFrame = CFrame.new(-61.6848221, 10.0853853, 229.676834)
end,})

local TPPrivRoomRoof = EighthTab:CreateButton({
Name = "TP To Private Room (Roof)",
Callback = function()
    local HumanoidRootPart = getgenv().HumanoidRootPart
    
    HumanoidRootPart.CFrame = CFrame.new(4220.37842, 23.5336628, 61.3636169)
end,})

local NineTab = Window:CreateTab("</ Anti >", nil)
local CreditsSection = NineTab:CreateSection("- </ Anti > -")

local antiBangTPLoop = NineTab:CreateToggle({
Name = "Anti Bang/TP (Loop Method)",
CurrentValue = false,
Flag = "AntiBangTPLooping",
Callback = function(doAntiTP)
if getgenv().doTeleport == true then
    getgenv().doTeleport = false
end
wait(0.5)
if doAntiTP then
    local Workspace = getgenv().Workspace
    local HumanoidRP = getgenv().HumanoidRootPart

    if HumanoidRP and HumanoidRP ~= nil then
        getgenv().doTeleport = true
        while getgenv().doTeleport == true do
        wait()
            HumanoidRP.CFrame = CFrame.new(4213.66602, 2.76511836, 67.6830292)
        end
    else
        warn("HumanoidRootPart was destroyed or is nil!")
        wait()
        getgenv().doTeleport = false
    end
else
    getgenv().doTeleport = false
    wait(.1)
    repeat wait() until getgenv().doTeleport == false
    wait(0.3)
    local Workspace = getgenv().Workspace
    local HumanoidRP = getgenv().HumanoidRootPart
    print("Teleporting Back...")
    wait()
    HumanoidRP.CFrame = CFrame.new(36.5316811, 4.99999952, 24.585743)
end
end,})

local bruhAntiTPMethod3 = NineTab:CreateButton({
Name = "Anti Bang/TP (Method 3, You Die To)",
Callback = function()
    local voidPosition = Vector3.new(-499, -499, -499)
    local Workspace = getgenv().Workspace
    local HumanoidRP = getgenv().HumanoidRootPart
    print("Killing...")
    wait(.4)
    HumanoidRP.CFrame = CFrame.new(voidPosition)
end,})

local MethodFourAntiTP = NineTab:CreateToggle({
Name = "Anti Bang/TP (Method 4, Void Method)",
CurrentValue = false,
Flag = "AntiTPMethod4",
Callback = function(getLoopTpToVoid)
    if getLoopTpToVoid then
        local putPositionTo = Vector3.new(-84385288, 69380040, 174817648)
        local Workspace = getgenv().Workspace
        local HumanoidRP = getgenv().HumanoidRootPart
            getgenv().loopTPToVoid = true
            while getgenv().loopTPToVoid == true do
            wait()
                HumanoidRP.CFrame = CFrame.new(putPositionTo)
            end
        else
            getgenv().loopTPToVoid = false
        wait()
        repeat wait() until getgenv().loopTPToVoid == false
        local HumanoidRootPart = getgenv().HumanoidRootPart
        HumanoidRootPart.CFrame = CFrame.new(36.5316811, 4.99999952, 24.585743)
    end
end,})

local TenthTab = Window:CreateTab("</ UI >", nil)

local UiSection = TenthTab:CreateSection("- UI -")

ReExecuteGUI = TenthTab:CreateButton({
Name = "Re-Execute GUI",
Callback = function()
    local Humanoid = getgenv().Humanoid
    getgenv().getLoopKick = false
    wait(0.2)
    getgenv().SCRIPT_EXECUTED = false
    getgenv().SCRIPT_EXECUTED = false
    getgenv().Invis_Loaded = false
    getgenv().GetLoopRunning = false
    getgenv().GetLoopRunning = false
    getgenv().LmaoGetMuted = false
    getgenv().css_digital = false
    wait(0.2)
    Rayfield:Destroy()
    wait(1)
    loadstring(game:HttpGet(('https://raw.githubusercontent.com/MYSISBETTER/Mys-v5/refs/heads/main/Mys%20Client%20V5')))()
end,})

DestroyGUIScript = TenthTab:CreateButton({
Name = "Destroy GUI/Script",
Callback = function()
    getgenv().getLoopKick = false
    wait(0.2)
    getgenv().SCRIPT_EXECUTED = false
    getgenv().SCRIPT_EXECUTED = false
    getgenv().Invis_Loaded = false
    getgenv().GetLoopRunning = false
    getgenv().GetLoopRunning = false
    getgenv().LmaoGetMuted = false
    getgenv().css_digital = false
    wait(.3)
    Rayfield:Destroy()
end,})


local EleventhTab = Window:CreateTab("🎉 Credits", nil)
local CreditsSection = EleventhTab:CreateSection("- Credits -")
EleventhTab:CreateLabel("Script By: MYS")
SecTab:CreateLabel("Script By: MYS")



Rayfield:Notify({
  Title = "Mys Client Loaded",
  Content = "Everything is working fine.",
  Duration = 5,
})
